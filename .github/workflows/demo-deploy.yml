name: Demo Deployment

on:
  push:
    branches:
      - main
      - 'gcweb-pr*'
      - demo-deploy

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository (including submodules if needed)
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    # Step 2: Set up Node.js and Bower
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Bower
      run: npm install -g bower

    # Step 3: Install dependencies and build demo files
    - name: Install dependencies
      run: npm install --legacy-peer-deps

    # Optional: Debug - List project files before build
    - name: Debug - List project files
      run: ls -R

    - name: Build Demo Files (GCWeb)
      run: |
        grunt demo --branch=${{ github.ref_name }}
        docker compose up -d
        docker compose down

    - name: Build Demo Files (WET-BOEW)
      run: grunt dist

    # Step 4 (Modified): Copy built files directly to the root of the gh-pages directory
    - name: Copy Built Files to gh-pages Root
      run: |
        mkdir -p ${{ github.workspace }}/gh-pages
        
        # Debug build outputs if needed
        echo "Contents of ~sites directory (if any):"
        if [ -d "./~sites" ]; then ls -R ./~sites; fi
        echo "Contents of dist directory (if any):"
        if [ -d "./dist" ]; then ls -R ./dist; fi

        # Use rsync with --delete to sync exactly
        if [ -d "./~sites" ]; then
          rsync -av --delete ./~sites/ ${{ github.workspace }}/gh-pages/
        fi
        if [ -d "./dist" ]; then
          rsync -av --delete ./dist/ ${{ github.workspace }}/gh-pages/
        fi

    # Step 5: Commit and Push Changes to gh-pages
    - name: Commit and Push to gh-pages
      run: |
        cd ${{ github.workspace }}/gh-pages

        # Configure Git for this environment
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

        # Check out or initialize gh-pages
        if git rev-parse --verify origin/gh-pages; then
          git checkout gh-pages
          git pull origin gh-pages
        else
          git checkout --orphan gh-pages
          git rm -rf .
          touch .nojekyll
          git add .nojekyll
          git commit -m "Initialize gh-pages branch"
          git push --force origin gh-pages
        fi

        # Stage and commit all changes to gh-pages
        git add .
        # Remove --allow-empty if you only want a commit when files change
        git commit -m "Update gh-pages with new demo files" --allow-empty
        git pull --rebase origin gh-pages || true
        # Force push overwrites history, ensure this is acceptable for your workflow
        git push origin gh-pages --force
